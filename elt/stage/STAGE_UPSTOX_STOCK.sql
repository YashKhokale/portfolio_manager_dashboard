INSERT INTO STAGE.STAGE_UPSTOX_STOCK (
	STOCK_SYMBOL,
	DATE,
	PRICE,
	LOAD_DATE,
	RECORD_SOURCE,
	STOCK_SYMBOL_BUSINESS_KEY,
	STOCK_SYMBOL_KEY,
	DATE_BUSINESS_KEY,
	DATE_KEY,
	STOCK_DATE_LINK_KEY
)
WITH CLEANED AS (
SELECT
	PUBLIC.UDF_REPLACE_CRN(SPLIT_PART(record_source , '_', 4)) AS STOCK_SYMBOL,
    candles_data [4]::NUMERIC AS price,
    TO_DATE(SUBSTRING(candles_data [0]::text FROM 2 FOR 10), 'YYYY-MM-DD') AS date,
	PUBLIC.UDF_REPLACE_CRN(record_source) AS record_source,
	load_date::DATE
FROM
    load.load_stock,
    jsonb_array_elements(json_data -> 'data'->'candles') AS candles_data
WHERE record_source ILIKE 'hist_upstox_%'
)
SELECT
    STOCK_SYMBOL,
    DATE,
    PRICE,
    LOAD_DATE,
    RECORD_SOURCE,
    CASE WHEN STOCK_SYMBOL = '' THEN NULL ELSE UPPER(STOCK_SYMBOL) END AS STOCK_SYMBOL_BUSINESS_KEY,
    CASE WHEN (STOCK_SYMBOL IS NULL OR STOCK_SYMBOL = '') THEN '00000000000000000000000000000000' ELSE MD5(UPPER(STOCK_SYMBOL)) END AS STOCK_SYMBOL_KEY,
    DATE AS DATE_BUSINESS_KEY,
    CASE WHEN DATE IS NULL THEN '00000000000000000000000000000000' ELSE MD5(DATE::TEXT) END AS DATE_KEY,
    MD5(
        COALESCE(CASE WHEN STOCK_SYMBOL = '' THEN NULL ELSE UPPER(STOCK_SYMBOL) END, '') || '||' ||
        COALESCE(DATE::TEXT, '')
    ) AS STOCK_DATE_LINK_KEY
FROM
    CLEANED
;